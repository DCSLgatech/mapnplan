<launch>

	<param name="robot_description" textfile="$(find mapnplan)/models/r2d4.urdf"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mapnplan)/worlds/maze.sdf"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

	<!-- Spawn a robot into Gazebo -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find mapnplan)/models/r2d4.urdf -urdf -100 -x -0 -y -0 -z 1 -model r2d2"/>

<!-- start robot state publisher -->
<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="100.0" />
    <param name="tf_prefix" type="string" value="" />
</node>

<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

<node name="waypoint_tracker" pkg="mapnplan" type="2dwaypoint_tracker" />

<node name="pointcloud2pointcloud2" pkg="mapnplan" type="pointcloud2pointcloud2" />

<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">  
            <param name="resolution" value="0.15" />  
              
            <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->  
            <param name="frame_id" type="string" value="odom" />  
              
            <!-- maximum range to integrate (speedup!) -->  
<!--            <param name="max_sensor_range" value="15.0" /> -->
            <!-- maximum range to integrate (speedup!) -->  
<!--            <param name="min_sensor_range" value="0.00" /> -->
            	
            <param name="sensor_model/max_range" value="7.0" />
            <param name="sensor_model/min_range" value="0.5" />
            
            <param name="occupancy_min_z" value="0.0" />  
            <param name="occupancy_max_z" value="1.0" />     
            	
            	     
           <!-- <param name="filter_ground" value="false" />   -->
            
           <!-- <param name="ground_filter/distance" value="0.2" />   -->
              
       </node> 

<node name="rviz" pkg="rviz" type="rviz" args="-d $(find mapnplan)/config/config.rviz" />

<node name="planner" pkg="mapnplan" type="planner" output="screen"/>

<node pkg="rostopic" type="rostopic" name="goal_pub"
        args='pub planner_goal -1 geometry_msgs/Point "{x: 2.0, y: 10.0, z: 0.0}" ' output="screen" />

 <!--<node name="controller_spawner" pkg="controller_manager" type="spawner"
          args="$(find mapnplan)/config/controller.yaml"/> -->

<!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find mapnplan)/config/controller.yaml" command="load"/>

  <!-- load the controllers -->
  <!--<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="head_swivel_velocity_controller joint_state_controller"/>-->

<node pkg="rostopic" type="rostopic" name="head_speed_pub"
        args='pub -r 1 /head_swivel_velocity_controller/command std_msgs/Float64 "data: 0.1"' />

</launch>
